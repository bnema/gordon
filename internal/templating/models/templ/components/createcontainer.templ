package components

// ContainerFormData holds the data needed for the container creation form
type ContainerFormData struct {
	ImageName           string
	ImageID             string
	ShortID             string
	ContainerName       string
	ContainerSubdomain  string
	ContainerDomain     string
	Ports               string
	ProxyPort           string
	Volumes             string
	EnvironmentVariables string
	ErrorMessage        string
}

// CreateContainerForm displays a form for creating a new container
templ CreateContainerForm(data ContainerFormData) {
	<div class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 flex-grow" hx-ext="response-targets">
		<!-- Left Side: Docker Run Options -->
		<div class="flex-grow card p-6">
			<h2 class="card-title pb-4">Deploy a container based on { data.ImageName }</h2>
			if data.ErrorMessage != "" {
				<div class="alert alert-error">
					<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
					<span>{ data.ErrorMessage }</span>
				</div>
			}
			<form id={ "create-container-form-" + data.ShortID } action={ templ.SafeURL("/create-container/" + data.ShortID) } method="post" 
				hx-post={ "/htmx/create-container/" + data.ShortID }
				hx-swap="innerHTML" 
				hx-target={ "#create-container-" + data.ShortID }
				hx-target-*={ "#error-message-create-container-" + data.ShortID }>
				<!-- Image Name -->
				<div class="grid grid-cols-1 md:grid-cols-3 gap-4 pb-4">
					<div class="md:col-span-1">
						<label class="label">
							<span class="label-text">Image name</span>
						</label>
						<input type="text" name="image_name" class="input input-bordered input-disabled w-full"
							value={ data.ImageName } readonly />
					</div>

					<div class="md:col-span-2">
						<label class="label">
							<span class="label-text">Image ID</span>
						</label>
						<input type="text" name="image_id" class="input input-bordered input-disabled w-full"
							value={ data.ImageID } readonly />
					</div>
				</div>

				<!-- Container Name -->
				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Container name</span>
					</label>
					<input type="text" name="container_name" class="input input-bordered w-full" value={ data.ContainerName } />
				</div>
				
				<!-- Http(s) / Subdomain / Domain -->
				<div class="grid grid-cols-1 md:grid-cols-12 gap-4 pb-4">
					<!-- Protocol -->
					<div class="md:col-span-3">
						<label class="label">
							<span class="label-text">Protocol</span>
						</label>
						<select name="container_protocol" class="select select-bordered w-full">
							<option value="https">https</option>
							<option value="http">http</option>
						</select>
					</div>

					<!-- Subdomain -->
					<div class="md:col-span-4">
						<label class="label">
							<span class="label-text">Subdomain</span>
						</label>
						<input type="text" name="container_subdomain" class="input input-bordered w-full" value={ data.ContainerSubdomain } />
					</div>

					<!-- Domain -->
					<div class="md:col-span-5">
						<label class="label">
							<span class="label-text">Domain</span>
						</label>
						<input type="text" name="container_domain" class="input input-bordered w-full" value={ data.ContainerDomain } />
					</div>
				</div>
				
				<!-- Exposed Ports -->
				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Exposed Ports (Optional)</span>
						<span class="label-text-alt">eg: 8080:1887/tcp (You can specify multiple ports by separating them with a comma)</span>
					</label>
					<input type="text" name="ports" class="input input-bordered w-full" value={ data.Ports } />
				</div>

				<!-- Proxy Port -->
				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Container Proxy Port (Required)</span>
						<span class="label-text-alt">Specify the internal container port that the proxy will route traffic to</span>
					</label>
					<input type="text" name="container_port" class="input input-bordered w-full" value={ data.ProxyPort } required />
				</div>
				
				<!-- Volumes -->
				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Volumes</span>
						<span class="label-text-alt">e.g. ./data:/container/data</span>
					</label>
					<input type="text" name="volumes" class="input input-bordered w-full" value={ data.Volumes } />
				</div>

				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Environment variables</span>
						<span class="label-text-alt">e.g. KEY=VALUE</span>
					</label>
					<textarea name="environment_variables" class="textarea textarea-bordered w-full"
						rows="4">{ data.EnvironmentVariables }</textarea>
				</div>
				
				<!-- Restart: always/on-failure/only when stopped/never -->
				<div class="form-control pb-4">
					<label class="label">
						<span class="label-text">Restart</span>
					</label>
					<select name="restart" class="select select-bordered w-full">
						<option value="always">Always</option>
						<option value="on-failure">On failure</option>
						<option value="unless-stopped">Unless stopped</option>
						<option value="never">Never</option>
					</select>
				</div>

				<!-- Skip Proxy Setup Option -->
				<div class="form-control pb-4">
					<label class="label cursor-pointer justify-start gap-4">
						<input type="checkbox" name="skip_proxy_setup" value="true" class="checkbox checkbox-primary" />
						<span>Skip proxy setup (create container only, don't set up domain/certificates)</span>
					</label>
					<div class="text-sm opacity-70 ml-10">
						Use this option if you only want to create the container without triggering proxy setup, 
						certificate generation, and other related processes.
					</div>
				</div>

				<button type="submit" id="create-container-submit" class="btn btn-primary">
					Create Container
				</button>
			</form>
			<div id={ "error-message-create-container-" + data.ShortID } class="text-error mt-4"></div>
		</div>
	</div>
} 