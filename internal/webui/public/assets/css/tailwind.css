/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.z-50 {
  z-index: 50;
}
.container {
  width: 100%;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.table {
  display: table;
}
.h-full {
  height: 100%;
}
.w-1\/3 {
  width: calc(1/3 * 100%);
}
.w-1\/4 {
  width: calc(1/4 * 100%);
}
.w-2\/3 {
  width: calc(2/3 * 100%);
}
.w-5\/12 {
  width: calc(5/12 * 100%);
}
.w-full {
  width: 100%;
}
.flex-1 {
  flex: 1;
}
.flex-grow {
  flex-grow: 1;
}
.table-auto {
  table-layout: auto;
}
.cursor-pointer {
  cursor: pointer;
}
.resize {
  resize: both;
}
.list-disc {
  list-style-type: disc;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.content-center {
  align-content: center;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-evenly {
  justify-content: space-evenly;
}
.justify-start {
  justify-content: flex-start;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t-2 {
  border-top-style: var(--tw-border-style);
  border-top-width: 2px;
}
.bg-transparent {
  background-color: transparent;
}
.text-center {
  text-align: center;
}
.align-middle {
  vertical-align: middle;
}
.opacity-0 {
  opacity: 0%;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-150 {
  --tw-duration: 150ms;
  transition-duration: 150ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.\[image\:tag\] {
  image: tag;
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@font-face {
  font-family: "IBMPlexSans-Bold";
  src: url("/assets/fonts/IBMPlex/IBMPlexSans-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: "IBMPlexSans-Regular";
  src: url("/assets/fonts/IBMPlex/IBMPlexSans-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "JetBrainsMono-Nerd-Font-Regular";
  src: url("/assets/fonts/JetBrainsMonoNerd/JetBrainsMonoNerdFont-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "JetBrainsMono-Nerd-Font-Bold";
  src: url("/assets/fonts/JetBrainsMonoNerd/JetBrainsMonoNerdFont-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: "LilitaOne-Regular";
  src: url("/assets/fonts/LilitaOne/LilitaOne-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
.fade-me-out.htmx-swapping {
  opacity: 0;
  transition: opacity 1s ease-out;
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
}
@keyframes fade-out {
  to {
    opacity: 0;
  }
}
@keyframes slide-from-right {
  from {
    transform: translateX(90px);
  }
}
@keyframes slide-to-left {
  to {
    transform: translateX(-90px);
  }
}
@keyframes wiggle {
  0%, 100% {
    transform: rotate(-3deg);
  }
  50% {
    transform: rotate(3deg);
  }
}
#update-available {
  animation: wiggle 1s ease-in-out infinite;
}
.slide-it {
  view-transition-name: slide-it;
}
::view-transition-old(slide-it) {
  animation: 180ms cubic-bezier(0.4, 0, 1, 1) both fade-out, 600ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
}
::view-transition-new(slide-it) {
  animation: 420ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in, 600ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
}
.gordon-title {
  font-family: "LilitaOne-Regular", sans-serif;
}
.IBMPlexSans {
  font-family: "IBMPlexSans-Regular", sans-serif;
}
.JetBrainsMonoNF, .iconf {
  font-family: "JetBrainsMono-Nerd-Font-Regular", sans-serif;
}
.JetBrainsMonoBoldNF, .iconfb {
  font-family: "JetBrainsMono-Nerd-Font-Bold", sans-serif;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
