# Gordon v2 - Development Configuration Example
# For local development and testing

[server]
port = 8080
registry_port = 5000
registry_domain = "registry.yourdomain.com"  # Your Gordon registry domain
runtime = "auto"  # auto-detects Docker/Podman
ssl_email = "dev@localhost"
data_dir = "./dev-data"

[registry_auth]
enabled = false  # Disable auth for easier local development

[auto_route]
enabled = true  # Enable automatic route creation from image names

# Development routes using your domain
[routes]
"app.yourdomain.com" = "myapp:latest"           # Main app - latest build
"api.yourdomain.com" = "myapi:latest"           # API service  
"admin.yourdomain.com" = "admin:latest"         # Admin interface
"docs.yourdomain.com" = "docs:latest"           # Documentation

# Test different versions
"app-v1.yourdomain.com" = "myapp:v1.0.0"        # Test older version
"app-v2.yourdomain.com" = "myapp:v2.0.0"        # Test newer version

# Third-party services for development
"db-admin.yourdomain.com" = "phpmyadmin:latest" # Database admin
"mail.yourdomain.com" = "mailhog/mailhog:latest" # Email testing

# Development workflow:
# 1. Point DNS to your Gordon server:
#    A    *.yourdomain.com    →    YOUR_GORDON_SERVER_IP
#    A    yourdomain.com      →    YOUR_GORDON_SERVER_IP
#
# 2. Build your app: docker build -t myapp:latest .
# 3. Push to Gordon registry: 
#    docker tag myapp:latest registry.yourdomain.com/myapp:latest
#    docker push registry.yourdomain.com/myapp:latest
# 4. Access at https://app.yourdomain.com
#
# AUTO-ROUTE FEATURE:
# With auto_route.enabled = true, you can also push images with domain names as image names:
#    docker build -t myapp .
#    docker tag myapp:latest registry.yourdomain.com/mytestapp.bamen.dev:latest  
#    docker push registry.yourdomain.com/mytestapp.bamen.dev:latest
# Gordon will automatically create a route for mytestapp.bamen.dev -> mytestapp.bamen.dev:latest
#
# Cloudflare handles SSL and DNS for your remote Gordon server!